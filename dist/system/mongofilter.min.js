/*https://github.com/malko/mongofilter brought to you under MIT licence by Jonathan Gotti version: 1.0.1*/
System.register([],function(n){"use strict";function r(n,r,t,u){var i=Array.isArray(r)?r[y[t]](function(r,t){return e(r,t,u)(n)}):Object.keys(r)[y[t]](function(t){return e(r[t],t,u)(n)});return"$nor"===t?!i:i}function t(n,r,t){return g(r)?l.$eq(n[t],r):Array.isArray(r)?l.$in(n[t],r):e(r,"$and",t)(n)}function e(n,e,u){var i=void 0===arguments[1]?"$and":arguments[1];return function(e){if("string"==typeof e)try{e=JSON.parse(e)}catch(o){return!1}return i=p[i]||i,i in y?r(e,n,i,u):i in l?l[i](e[u],n):t(e,n,i)}}function u(n){if("string"==typeof n&&(n=JSON.parse(n)),!n||g(n))throw new TypeError("Invalid query");var r=e(n);return r.filter=function(n){return n&&n.filter?n.filter(r):[]},r}var i,o,f,c,a,$,s,g,l,y,p;return n("default",u),{setters:[],execute:function(){i=/(^|[^%])%(?!%)/g,o=/(^|[^\\])(_+)/g,f=function(n,r,t){return r+new Array(t.length+1).join(".")},c=function(n){return new RegExp("^"+n.replace(i,"$1.*").replace(o,f)+"$")},a=/^\/([\s\S]*)\/([igm]*)$/,$=function(n){return"string"==typeof n&&!function(){var r=void 0;n.replace(a,function(t,e,u){n=e,r=u}),n=r?new RegExp(n,r):new RegExp(n)}(),n},s=/^(string|number|boolean)$/,g=function(n){return null==n||s.test(typeof n)},l={$gt:function(n,r){return n>r},$gte:function(n,r){return n>=r},$lt:function(n,r){return r>n},$lte:function(n,r){return r>=n},$eq:function(n,r){return n===r},$neq:function(n,r){return n!==r},$regex:function(n,r){return $(r).test(n)},$like:function(n,r){return c(r).test(n)},$nlike:function(n,r){return!c(r).test(n)},$in:function(n,r){return!!~r.indexOf(n)},$nin:function(n,r){return!~r.indexOf(n)}},y={$or:"some",$nor:"some",$and:"every"},p={$e:"$eq",$ne:"$neq"},u.alias=p,u.comparators=l}}});
