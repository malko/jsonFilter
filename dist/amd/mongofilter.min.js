/*https://github.com/malko/mongofilter brought to you under MIT licence by Jonathan Gotti version: 1.0.1*/
define(["exports","module"],function(n,r){"use strict";function e(n,r,e,t){var i=Array.isArray(r)?r[y[e]](function(r,e){return u(r,e,t)(n)}):Object.keys(r)[y[e]](function(e){return u(r[e],e,t)(n)});return"$nor"===e?!i:i}function t(n,r,e){return g(r)?p.$eq(n[e],r):Array.isArray(r)?p.$in(n[e],r):u(r,"$and",e)(n)}function u(n,r,u){var i=void 0===arguments[1]?"$and":arguments[1];return function(r){if("string"==typeof r)try{r=JSON.parse(r)}catch(o){return!1}return i=d[i]||i,i in y?e(r,n,i,u):i in p?p[i](r[u],n):t(r,n,i)}}function i(n){if("string"==typeof n&&(n=JSON.parse(n)),!n||g(n))throw new TypeError("Invalid query");var r=u(n);return r.filter=function(n){return n&&n.filter?n.filter(r):[]},r}r.exports=i;var o=/(^|[^%])%(?!%)/g,f=/(^|[^\\])(_+)/g,c=function(n,r,e){return r+new Array(e.length+1).join(".")},a=function(n){return new RegExp("^"+n.replace(o,"$1.*").replace(f,c)+"$")},$=/^\/([\s\S]*)\/([igm]*)$/,s=function(n){return"string"==typeof n&&!function(){var r=void 0;n.replace($,function(e,t,u){n=t,r=u}),n=r?new RegExp(n,r):new RegExp(n)}(),n},l=/^(string|number|boolean)$/,g=function(n){return null==n||l.test(typeof n)},p={$gt:function(n,r){return n>r},$gte:function(n,r){return n>=r},$lt:function(n,r){return r>n},$lte:function(n,r){return r>=n},$eq:function(n,r){return n===r},$neq:function(n,r){return n!==r},$regex:function(n,r){return s(r).test(n)},$like:function(n,r){return a(r).test(n)},$nlike:function(n,r){return!a(r).test(n)},$in:function(n,r){return!!~r.indexOf(n)},$nin:function(n,r){return!~r.indexOf(n)}},y={$or:"some",$nor:"some",$and:"every"},d={$e:"$eq",$ne:"$neq"};i.alias=d,i.comparators=p});
